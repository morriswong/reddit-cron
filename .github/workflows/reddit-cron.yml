name: Reddit Data Collection

on:
  schedule:
    - cron: '0 12 * * *'  # Daily at 12:00 UTC
  workflow_dispatch:  # Allow manual triggering

jobs:
  collect-reddit-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Explicitly grant write permissions

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for better git operations

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        sudo apt-get update
        sudo apt-get install -y jq curl wget

    - name: Download Reddit data (RSS method - Primary)
      id: rss_method
      continue-on-error: true
      run: python collect_reddit_rss.py
      env:
        REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}

    - name: Download Reddit data (Shell script fallback)
      id: shell_method
      if: steps.rss_method.outcome == 'failure'
      continue-on-error: true
      run: |
        chmod +x fetch_reddit.sh
        ./fetch_reddit.sh
      env:
        TZ: UTC

    - name: Download Reddit data (Python JSON fallback)
      id: python_method
      if: steps.rss_method.outcome == 'failure' && steps.shell_method.outcome == 'failure'
      continue-on-error: true
      run: python collect_reddit_data.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}

    - name: Check if data was collected
      id: check_data
      run: |
        if [ -n "$(find data -name "*.json" -mmin -10 2>/dev/null)" ]; then
          echo "data_collected=true" >> $GITHUB_OUTPUT
          echo "âœ“ New data files found"
        else
          echo "data_collected=false" >> $GITHUB_OUTPUT
          echo "âš  No new data files found"
        fi

    - name: Commit and push changes
      if: steps.check_data.outputs.data_collected == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add data/

        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "ðŸ“Š Update Reddit data - $(date -u +%Y-%m-%d)"
          git push
          echo "âœ“ Changes committed and pushed successfully"
        fi

    - name: Workflow Summary
      if: always()
      run: |
        echo "## Workflow Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Date**: $(date -u +%Y-%m-%d\ %H:%M:%S\ UTC)" >> $GITHUB_STEP_SUMMARY
        echo "- **RSS Method**: ${{ steps.rss_method.outcome }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Shell Method**: ${{ steps.shell_method.outcome || 'skipped' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Python JSON Method**: ${{ steps.python_method.outcome || 'skipped' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Data Collected**: ${{ steps.check_data.outputs.data_collected }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        if [ "${{ steps.check_data.outputs.data_collected }}" = "true" ]; then
          echo "### âœ“ Success - New data collected" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Show which method succeeded
          if [ "${{ steps.rss_method.outcome }}" = "success" ]; then
            echo "**Method used: RSS Feeds** âœ“ (Most reliable)" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ steps.shell_method.outcome }}" = "success" ]; then
            echo "**Method used: Shell Script** (RSS failed, fallback worked)" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ steps.python_method.outcome }}" = "success" ]; then
            echo "**Method used: Python JSON** (RSS and Shell failed, final fallback worked)" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Recent files:" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          ls -lh data/*/*.json | tail -5 >> $GITHUB_STEP_SUMMARY || true
          echo '```' >> $GITHUB_STEP_SUMMARY
        else
          echo "### âš  Warning - No new data collected" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**All methods failed - Reddit is blocking automated requests**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Tried:" >> $GITHUB_STEP_SUMMARY
          echo "1. RSS feeds (old.reddit.com, www.reddit.com, reddit.com)" >> $GITHUB_STEP_SUMMARY
          echo "2. Shell script with wget/curl" >> $GITHUB_STEP_SUMMARY
          echo "3. Python JSON scraping" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Why this happens:**" >> $GITHUB_STEP_SUMMARY
          echo "Reddit actively blocks automated scraping to encourage API usage." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Recommendations:**" >> $GITHUB_STEP_SUMMARY
          echo "1. **Use Reddit's Official API** (most reliable)" >> $GITHUB_STEP_SUMMARY
          echo "   - Create app at https://www.reddit.com/prefs/apps" >> $GITHUB_STEP_SUMMARY
          echo "   - Get OAuth credentials (free)" >> $GITHUB_STEP_SUMMARY
          echo "   - Update scripts for authenticated access" >> $GITHUB_STEP_SUMMARY
          echo "2. Try again tomorrow - blocking may be temporary" >> $GITHUB_STEP_SUMMARY
          echo "3. Consider alternative hosting platforms" >> $GITHUB_STEP_SUMMARY
        fi